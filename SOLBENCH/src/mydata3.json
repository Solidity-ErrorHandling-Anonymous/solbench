{"contract": [{"name": "../dataset/sample/0x00d18a886e30234f8aa9b6d3a349b3bc981deda0.sol", "functions": [{"function name": "mul", "function arguments": "uint256 a, uint256 b", "require": [], "assert": [{"assert argument 1": "c / a == b", "assert argument 2": ";\n"}], "revert": [], "external calls": 1, "line": 7}, {"function name": "sub", "function arguments": "uint256 a, uint256 b", "require": [], "assert": [{"assert argument 1": "b <= a", "assert argument 2": ";\n"}], "revert": [], "external calls": 0, "line": 16}, {"function name": "add", "function arguments": "uint256 a, uint256 b", "require": [], "assert": [{"assert argument 1": "c >= a", "assert argument 2": ";\n"}], "revert": [], "external calls": 0, "line": 21}, {"function name": "balanceOf", "function arguments": "address _owner", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 30}, {"function name": "transfer", "function arguments": "address _to, uint256 _value", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 31}, {"function name": "checkMemberLevel", "function arguments": "address addr", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 36}, {"function name": "_toPct", "function arguments": "uint numerator, uint denominator ", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 135}, {"function name": "_applyPct", "function arguments": "uint numerator, uint pct", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 140}, {"function name": "PresalePool", "function arguments": "address receiverAddr, uint[] capAmounts, uint fee", "require": [{"require argument 1": "fee < 100", "require argument 2": ";\n"}, {"require argument 1": "capAmounts.length>1 && capAmounts.length<256", "require argument 2": ";\n"}, {"require argument 1": "capAmounts[i] <= capAmounts[0]", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 1, "line": 146}, {"function name": "", "function arguments": "", "require": [], "assert": [], "revert": [{"revert argument 1": "", "revert argument 2": ";\n"}], "external calls": 4, "line": 162}, {"function name": "_ethDeposit", "function arguments": "", "require": [{"require argument 1": "tx.gasprice <= maxGasPrice", "require argument 2": ";\n"}, {"require argument 1": "this.balance <= contributionCaps[0]", "require argument 2": ";\n"}, {"require argument 1": "newBalance >= contributionMin", "require argument 2": ";\n"}, {"require argument 1": "newBalance <= _checkCap", "require argument 2": "msg.sender"}], "assert": [{"assert argument 1": "contractStage == 1", "assert argument 2": ";\n"}], "revert": [], "external calls": 0, "line": 171}, {"function name": "_ethRefund", "function arguments": "", "require": [{"require argument 1": "msg.sender == owner || msg.sender == receiverAddress", "require argument 2": ";\n"}, {"require argument 1": "msg.value >= contributionMin", "require argument 2": ";\n"}], "assert": [{"assert argument 1": "contractStage == 3", "assert argument 2": ";\n"}], "revert": [], "external calls": 7, "line": 184}, {"function name": "withdraw", "function arguments": "address tokenAddr", "require": [{"require argument 1": "c.balance > 0", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 4, "line": 197}, {"function name": "withdrawFor", "function arguments": "address contributor, address tokenAddr", "require": [{"require argument 1": "contractStage == 3", "require argument 2": ";\n"}, {"require argument 1": "whitelist[contributor].balance > 0", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 7, "line": 211}, {"function name": "_withdraw", "function arguments": "address receiver, address tokenAddr", "require": [{"require argument 1": " ", "require argument 2": "ethRefundAmount.length > c.ethRefund"}, {"require argument 1": "d.token.transfer", "require argument 2": "receiver"}], "assert": [{"assert argument 1": "contractStage == 3", "assert argument 2": ";\n"}], "revert": [], "external calls": 1, "line": 219}, {"function name": "authorize", "function arguments": "address addr, uint cap", "require": [{"require argument 1": "contractStage == 1", "require argument 2": ";\n"}, {"require argument 1": "!whitelist[addr].authorized", "require argument 2": ";\n"}, {"require argument 1": "", "require argument 2": "cap > 0 && cap < contributionCaps.length"}, {"require argument 1": "size == 0", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 13, "line": 257}, {"function name": "authorizeMany", "function arguments": "address[] addr, uint cap", "require": [{"require argument 1": "addr.length < 255", "require argument 2": ";\n"}, {"require argument 1": "cap > 0 && cap < contributionCaps.length", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 4, "line": 271}, {"function name": "revoke", "function arguments": "address addr", "require": [{"require argument 1": "contractStage < 3", "require argument 2": ";\n"}, {"require argument 1": "whitelist[addr].authorized", "require argument 2": ";\n"}, {"require argument 1": "whitelistContract.checkMemberLevel", "require argument 2": "addr"}], "assert": [], "revert": [], "external calls": 3, "line": 282}, {"function name": "modifyIndividualCap", "function arguments": "address addr, uint cap", "require": [{"require argument 1": "contractStage < 3", "require argument 2": ";\n"}, {"require argument 1": "cap < contributionCaps.length || ", "require argument 2": "cap >= contributionMin && cap <= contributionCaps[0]"}, {"require argument 1": "c.authorized", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 7, "line": 297}, {"function name": "modifyLevelCap", "function arguments": "uint level, uint cap", "require": [{"require argument 1": "contractStage < 3", "require argument 2": ";\n"}, {"require argument 1": "level > 0 && level < contributionCaps.length", "require argument 2": ";\n"}, {"require argument 1": "this.balance <= cap && contributionCaps[0] >= cap", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 6, "line": 315}, {"function name": "modifyAllLevelCaps", "function arguments": "uint[] cap, uint time", "require": [{"require argument 1": "contractStage < 3", "require argument 2": ";\n"}, {"require argument 1": "cap.length == contributionCaps.length-1", "require argument 2": ";\n"}, {"require argument 1": "time == 0 || time>block.timestamp", "require argument 2": ";\n"}, {"require argument 1": "contributionCaps[i+1] <= cap[i] && contributionCaps[0] >= cap[i]", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 2, "line": 325}, {"function name": "modifyMaxContractBalance", "function arguments": "uint amount", "require": [{"require argument 1": "contractStage < 3", "require argument 2": ";\n"}, {"require argument 1": "amount >= contributionMin", "require argument 2": ";\n"}, {"require argument 1": "amount >= this.balance", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 4, "line": 345}, {"function name": "_checkCap", "function arguments": "address addr", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 357}, {"function name": "_checkWhitelistContract", "function arguments": "address addr", "require": [], "assert": [], "revert": [], "external calls": 4, "line": 370}, {"function name": "checkPoolBalance", "function arguments": "", "require": [], "assert": [], "revert": [], "external calls": 5, "line": 381}, {"function name": "checkContributorBalance", "function arguments": "address addr", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 391}, {"function name": "checkAvailableTokens", "function arguments": "address addr, address tokenAddr", "require": [], "assert": [], "revert": [], "external calls": 8, "line": 417}, {"function name": "closeContributions", "function arguments": "", "require": [{"require argument 1": "contractStage == 1", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 2, "line": 429}, {"function name": "reopenContributions", "function arguments": "", "require": [{"require argument 1": "contractStage == 2", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 0, "line": 436}, {"function name": "setReceiverAddress", "function arguments": "address addr", "require": [{"require argument 1": "addr != 0x00 && receiverAddress == 0x00", "require argument 2": ";\n"}, {"require argument 1": "contractStage < 3", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 0, "line": 446}, {"function name": "submitPool", "function arguments": "uint amountInWei", "require": [{"require argument 1": "contractStage < 3", "require argument 2": ";\n"}, {"require argument 1": "receiverAddress != 0x00", "require argument 2": ";\n"}, {"require argument 1": "block.number >= addressChangeBlock.add", "require argument 2": "6000"}, {"require argument 1": "contributionMin <= amountInWei && amountInWei <= this.balance", "require argument 2": ";\n"}, {"require argument 1": "receiverAddress.call.value", "require argument 2": "amountInWei"}], "assert": [], "revert": [], "external calls": 1, "line": 458}, {"function name": "enableTokenWithdrawals", "function arguments": "address tokenAddr, bool notDefault", "require": [{"require argument 1": "contractStage == 3", "require argument 2": ";\n"}, {"require argument 1": "activeToken != 0x00", "require argument 2": ";\n"}, {"require argument 1": "amount > 0", "require argument 2": ";\n"}, {"require argument 1": "d.token.transfer", "require argument 2": "owner"}], "assert": [], "revert": [], "external calls": 5, "line": 474}, {"function name": "tokenFallback", "function arguments": "address from, uint value, bytes data", "require": [], "assert": [], "revert": [], "external calls": 6, "line": 494}], "modifiers": [], "constructors": [], "compiler versions": 0}, {"name": "../dataset/sample/0x0c259e7c073c81188917c700a179818f18c5d6f8.sol", "functions": [], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "\n", "require": [{"require argument 1": "msg.sender == owner", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 2, "line": 81}], "constructors": [], "compiler versions": "^0.4.19;\n"}, {"name": "../dataset/sample/0xfd1d97f0d8b100a9df095b40a13520af13df7ec1.sol", "functions": [{"function name": "mul", "function arguments": "uint256 a, uint256 b", "require": [], "assert": [{"assert argument 1": "c / a == b", "assert argument 2": ";\n"}], "revert": [], "external calls": 1, "line": 12}, {"function name": "div", "function arguments": "uint256 a, uint256 b", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 28}, {"function name": "sub", "function arguments": "uint256 a, uint256 b", "require": [], "assert": [{"assert argument 1": "b <= a", "assert argument 2": ";\n"}], "revert": [], "external calls": 1, "line": 38}, {"function name": "add", "function arguments": "uint256 a, uint256 b", "require": [], "assert": [{"assert argument 1": "c >= a", "assert argument 2": ";\n"}], "revert": [], "external calls": 0, "line": 46}, {"function name": "transferOwnership", "function arguments": "address _newOwner", "require": [{"require argument 1": "_newOwner != address", "require argument 2": "0"}], "assert": [], "revert": [], "external calls": 1, "line": 101}, {"function name": "claimOwnership", "function arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 109}, {"function name": "isContract", "function arguments": "address addr", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 225}, {"function name": "totalSupply", "function arguments": "", "require": [], "assert": [], "revert": [], "external calls": 6, "line": 299}, {"function name": "balanceOf", "function arguments": "address who", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 300}, {"function name": "transfer", "function arguments": "address to, uint256 value", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 301}, {"function name": "allowance", "function arguments": "address owner, address spender", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 310}, {"function name": "transferFrom", "function arguments": "address from, address to, uint256 value", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 313}, {"function name": "approve", "function arguments": "address spender, uint256 value", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 316}, {"function name": "pause", "function arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 399}, {"function name": "unpause", "function arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 407}], "modifiers": [{"modifier name": "whenUnlocked", "modifier arguments": "whenUnlocked()", "require": [{"require argument 1": "isMethodEnabled", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 0, "line": 344}, {"modifier name": "onlyValidator", "modifier arguments": "", "require": [{"require argument 1": "isValidator", "require argument 2": "msg.sender"}], "assert": [], "revert": [], "external calls": 0, "line": 469}, {"modifier name": "onlyValidator", "modifier arguments": "", "require": [{"require argument 1": "isValidator", "require argument 2": "msg.sender"}], "assert": [], "revert": [], "external calls": 11, "line": 593}, {"modifier name": "requiresPermission", "modifier arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 784}, {"modifier name": "transferFromConditionsRequired", "modifier arguments": "address _from, address _to", "require": [{"require argument 1": "!regulator.isBlacklistedUser", "require argument 2": "_to"}, {"require argument 1": "!is_origin_blacklisted || sender_can_spend_from_blacklisted_address", "require argument 2": " \"Origin cannot be blacklisted if spender is not an approved blacklist spender\""}], "assert": [], "revert": [], "external calls": 1, "line": 793}, {"modifier name": "userBlacklisted", "modifier arguments": "address _user", "require": [{"require argument 1": "regulator.isBlacklistedUser", "require argument 2": "_user"}], "assert": [], "revert": [], "external calls": 3, "line": 810}, {"modifier name": "userNotBlacklisted", "modifier arguments": "address _user", "require": [{"require argument 1": "!regulator.isBlacklistedUser", "require argument 2": "_user"}], "assert": [], "revert": [], "external calls": 1, "line": 818}, {"modifier name": "requiresWhitelistedToken", "modifier arguments": "", "require": [{"require argument 1": "isWhitelisted", "require argument 2": "msg.sender"}], "assert": [], "revert": [], "external calls": 7, "line": 1124}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 76}, {"constructor arguments": "address _regulator", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 774}, {"constructor arguments": "address _regulator, address _cusd", "require": [], "assert": [], "revert": [], "external calls": 31, "line": 1056}, {"constructor arguments": "address _regulator", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 1134}, {"constructor arguments": "address _regulator", "require": [], "assert": [], "revert": [], "external calls": 26, "line": 1318}], "compiler versions": "^0.4.18;\n"}, {"name": "../dataset/sample/0x0D5Ec207D7B29525Cc25963347903958C98a66d3.sol", "functions": [{"function name": "executeOperation", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 508}], "modifiers": [], "constructors": [{"constructor arguments": "ILendingPoolAddressesProvider _provider", "require": [], "assert": [], "revert": [], "external calls": 23, "line": 450}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 8, "line": 502}], "compiler versions": "^0.4.24;\n"}, {"name": "../dataset/sample/0x0c9943b4200bcA7738edDc93D7e229cDe1353e5A.sol", "functions": [], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "", "require": [{"require argument 1": "_owner == _msgSender", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 0, "line": 460}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 17, "line": 444}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 513}], "compiler versions": "^0.5.0;\n"}, {"name": "../dataset/sample/0xcA4b8Ba8f0CBd07DCa5F0861ecb73ff79326bB59.sol", "functions": [], "modifiers": [], "constructors": [{"constructor arguments": "address _controller", "require": [], "assert": [], "revert": [], "external calls": 10, "line": 147}], "compiler versions": "^0.6.0;\n"}, {"name": "../dataset/sample/0x0cbe2df57ca9191b64a7af3baa3f946fa7df2f25.sol", "functions": [{"function name": "mul", "function arguments": "uint256 a, uint256 b", "require": [{"require argument 1": "c / a == b", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 1, "line": 20}, {"function name": "div", "function arguments": "uint256 a, uint256 b", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 37}, {"function name": "sub", "function arguments": "uint256 a, uint256 b", "require": [{"require argument 1": "b <= a", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 1, "line": 48}, {"function name": "add", "function arguments": "uint256 a, uint256 b", "require": [{"require argument 1": "c >= a", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 0, "line": 58}, {"function name": "mod", "function arguments": "uint256 a, uint256 b", "require": [{"require argument 1": "b != 0", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 0, "line": 69}], "modifiers": [{"modifier name": "onlyOwner\n", "modifier arguments": "-", "require": [{"require argument 1": "msg.sender == owner", "require argument 2": " \"Only the contract owner may perform this action\""}], "assert": [], "revert": [], "external calls": 1, "line": 407}, {"modifier name": "onlyAssociatedContract\n", "modifier arguments": "-", "require": [{"require argument 1": "msg.sender == associatedContract", "require argument 2": " \"Only the associated contract can perform this action\""}], "assert": [], "revert": [], "external calls": 0, "line": 588}, {"modifier name": "onlyTarget", "modifier arguments": "\n", "require": [{"require argument 1": "Proxyable", "require argument 2": "msg.sender"}], "assert": [], "revert": [], "external calls": 2, "line": 812}, {"modifier name": "onlyProxy", "modifier arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 880}, {"modifier name": "optionalProxy\n", "modifier arguments": "-", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 885}, {"modifier name": "optionalProxy_onlyOwner\n", "modifier arguments": "-", "require": [{"require argument 1": "messageSender == owner", "require argument 2": " \"This action can only be performed by the owner\""}], "assert": [], "revert": [], "external calls": 2, "line": 893}, {"modifier name": "preventReentrancy", "modifier arguments": "\n", "require": [{"require argument 1": "!isInFunctionBody", "require argument 2": " \"Reverted to prevent reentrancy\""}], "assert": [], "revert": [], "external calls": 4, "line": 933}, {"modifier name": "onlyDuringSetup\n", "modifier arguments": "-", "require": [{"require argument 1": "now < setupExpiryTime", "require argument 2": " \"Can only perform this action during setup\""}], "assert": [], "revert": [], "external calls": 0, "line": 1241}, {"modifier name": "onlyOracle\n", "modifier arguments": "-", "require": [{"require argument 1": "msg.sender == oracle", "require argument 2": " \"Only the oracle can perform this action\""}], "assert": [], "revert": [], "external calls": 15, "line": 2190}, {"modifier name": "rateNotStale", "modifier arguments": "bytes4 currencyKey", "require": [{"require argument 1": "!exchangeRates.rateIsStale", "require argument 2": "currencyKey"}], "assert": [], "revert": [], "external calls": 66, "line": 3086}, {"modifier name": "notFeeAddress", "modifier arguments": "address account", "require": [{"require argument 1": "account != feePool.FEE_ADDRESS", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 1, "line": 3091}, {"modifier name": "onlySynth", "modifier arguments": "", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 3096}, {"modifier name": "nonZeroAmount", "modifier arguments": "uint _amount", "require": [{"require argument 1": "_amount > 0", "require argument 2": " \"Amount needs to be larger than 0\""}], "assert": [], "revert": [], "external calls": 2, "line": 3111}, {"modifier name": "onlyFeeAuthority\n", "modifier arguments": "-", "require": [{"require argument 1": "msg.sender == feeAuthority", "require argument 2": " \"Only the fee authority can perform this action\""}], "assert": [], "revert": [], "external calls": 50, "line": 3717}, {"modifier name": "onlySynthetix\n", "modifier arguments": "-", "require": [{"require argument 1": "msg.sender == address", "require argument 2": "synthetix"}], "assert": [], "revert": [], "external calls": 1, "line": 3723}, {"modifier name": "notFeeAddress", "modifier arguments": "address account", "require": [{"require argument 1": "account != FEE_ADDRESS", "require argument 2": " \"Fee address not allowed\""}], "assert": [], "revert": [], "external calls": 1, "line": 3729}, {"modifier name": "onlySynthetixOrFeePool", "modifier arguments": "", "require": [{"require argument 1": "isSynthetix || isFeePool", "require argument 2": " \"Only the Synthetix or FeePool contracts can perform this action\""}], "assert": [], "revert": [], "external calls": 32, "line": 4084}, {"modifier name": "notFeeAddress", "modifier arguments": "address account", "require": [{"require argument 1": "account != feePool.FEE_ADDRESS", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 2, "line": 4092}], "constructors": [{"constructor arguments": "address _owner", "require": [{"require argument 1": "_owner != address", "require argument 2": "0"}], "assert": [], "revert": [], "external calls": 11, "line": 375}, {"constructor arguments": "address _owner", "require": [{"require argument 1": "_owner != address", "require argument 2": "0"}], "assert": [], "revert": [], "external calls": 3, "line": 455}, {"constructor arguments": "address _owner, address _associatedContract", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 567}, {"constructor arguments": "address _owner, address _associatedContract", "require": [], "assert": [], "revert": [], "external calls": 3, "line": 650}, {"constructor arguments": "address _owner", "require": [], "assert": [], "revert": [], "external calls": 4, "line": 724}, {"constructor arguments": "address _proxy, address _owner", "require": [], "assert": [], "revert": [], "external calls": 3, "line": 857}, {"constructor arguments": "address _proxy, TokenState _tokenState,\n", "require": [], "assert": [], "revert": [], "external calls": 5, "line": 1059}, {"constructor arguments": "uint setupDuration", "require": [], "assert": [], "revert": [], "external calls": 11, "line": 1235}, {"constructor arguments": "address _owner, Synthetix _synthetix", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 1312}, {"constructor arguments": "address _owner, address _associatedContract", "require": [], "assert": [], "revert": [], "external calls": 23, "line": 1656}, {"constructor arguments": "\n", "require": [{"require argument 1": "_currencyKeys.length == _newRates.length", "require argument 2": " \"Currency key length and rate length must match.\""}], "assert": [], "revert": [], "external calls": 26, "line": 1929}, {"constructor arguments": "address _proxy, TokenState _tokenState, SynthetixState _synthetixState,\n", "require": [], "assert": [], "revert": [], "external calls": 5, "line": 2355}, {"constructor arguments": "address _proxy, address _owner, Synthetix _synthetix, address _feeAuthority, uint _transferFeeRate, uint _exchangeFeeRate", "require": [{"require argument 1": "_transferFeeRate <= MAX_TRANSFER_FEE_RATE", "require argument 2": " \"Constructed transfer fee rate should respect the maximum fee rate\""}, {"require argument 1": "_exchangeFeeRate <= MAX_EXCHANGE_FEE_RATE", "require argument 2": " \"Constructed exchange fee rate should respect the maximum fee rate\""}], "assert": [], "revert": [], "external calls": 15, "line": 3248}, {"constructor arguments": "address _proxy, TokenState _tokenState, Synthetix _synthetix, FeePool _feePool,\n", "require": [{"require argument 1": "_proxy != 0", "require argument 2": " \"_proxy cannot be 0\""}, {"require argument 1": "address", "require argument 2": "_synthetix"}, {"require argument 1": "address", "require argument 2": "_feePool"}, {"require argument 1": "_owner != 0", "require argument 2": " \"_owner cannot be 0\""}, {"require argument 1": "_synthetix.synths", "require argument 2": "_currencyKey"}], "assert": [], "revert": [], "external calls": 9, "line": 3823}], "compiler versions": "0.6.12;\n"}, {"name": "../dataset/sample/0x0d54d0f1c1f5fe7a525713b85f36de8fb6014046.sol", "functions": [], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "\n", "require": [{"require argument 1": "msg.sender == owner", "require argument 2": " \"Must be owner\""}], "assert": [], "revert": [], "external calls": 1, "line": 20}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 25}, {"constructor arguments": "address _logic", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 60}, {"constructor arguments": "address _implementation, address _authereumEnsManagerAddress", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 123}], "compiler versions": "^0.4.24;\n"}, {"name": "../dataset/sample/0x0c828e458f0b7298c965c0223c89f9e056e315d1.sol", "functions": [], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "", "require": [{"require argument 1": "_owner == _msgSender", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 0, "line": 539}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 31, "line": 523}, {"constructor arguments": "string memory name, string memory symbol", "require": [], "assert": [], "revert": [], "external calls": 6, "line": 682}, {"constructor arguments": "address token_, bytes32 merkleRoot_", "require": [], "assert": [], "revert": [], "external calls": 13, "line": 952}], "compiler versions": "0.5.12;\n"}, {"name": "../dataset/sample/0x813A8826571312aE4AAd27caf9e7352436B14A6c.sol", "functions": [], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "", "require": [{"require argument 1": "isOwner", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 0, "line": 305}, {"modifier name": "onlyRewardDistribution", "modifier arguments": "", "require": [{"require argument 1": "_msgSender", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 22, "line": 585}, {"modifier name": "updateReward", "modifier arguments": "address account", "require": [], "assert": [], "revert": [], "external calls": 8, "line": 656}, {"modifier name": "checkStart", "modifier arguments": "", "require": [{"require argument 1": "block.timestamp > starttime", "require argument 2": "\"not start\""}], "assert": [], "revert": [], "external calls": 30, "line": 750}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 6, "line": 256}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 290}], "compiler versions": "^0.6.5;\n"}, {"name": "../dataset/sample/0x0cf9b10fe87dc44b0307b954074faac7e756d6fa.sol", "functions": [], "modifiers": [{"modifier name": "limited", "modifier arguments": "\n", "require": [{"require argument 1": "day < 5", "require argument 2": " \"Can only be cast on a weekday\""}, {"require argument 1": "hour >= 14 && hour < 21", "require argument 2": " \"Outside office hours\""}], "assert": [], "revert": [], "external calls": 2, "line": 79}], "constructors": [{"constructor arguments": "string memory _description, uint256 _expiration, address _spellAction", "require": [], "assert": [], "revert": [], "external calls": 4, "line": 173}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 10, "line": 258}], "compiler versions": "^0.5.17;\n"}, {"name": "../dataset/sample/0x0d38ebc4b414a7a2163fd77f43fd82eef69a42ae.sol", "functions": [], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "", "require": [{"require argument 1": "newComer == _msgSender", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 0, "line": 197}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 8, "line": 175}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 215}], "compiler versions": "solidity"}, {"name": "../dataset/sample/0xcf520e3D57E7EFABDa0885978461D88e846674DD.sol", "functions": [], "modifiers": [], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 7}], "compiler versions": "^0.6.12;\n"}, {"name": "../dataset/sample/0x0C64e4763FB32cc5700a97A8328ad4396D739D29.sol", "functions": [{"function name": "mint", "function arguments": "address account, uint amount", "require": [{"require argument 1": "minters[msg.sender]", "require argument 2": " \"!minter\""}], "assert": [], "revert": [], "external calls": 2, "line": 206}, {"function name": "setGovernance", "function arguments": "address _governance", "require": [{"require argument 1": "msg.sender == governance", "require argument 2": " \"!governance\""}], "assert": [], "revert": [], "external calls": 1, "line": 211}, {"function name": "addMinter", "function arguments": "address _minter", "require": [{"require argument 1": "msg.sender == governance", "require argument 2": " \"!governance\""}], "assert": [], "revert": [], "external calls": 1, "line": 216}, {"function name": "removeMinter", "function arguments": "address _minter", "require": [{"require argument 1": "msg.sender == governance", "require argument 2": " \"!governance\""}], "assert": [], "revert": [], "external calls": 1, "line": 221}], "modifiers": [], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 15}, {"constructor arguments": "string memory name, string memory symbol, uint8 decimals", "require": [], "assert": [], "revert": [], "external calls": 10, "line": 97}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 7, "line": 202}], "compiler versions": "0.5.0;\n"}, {"name": "../dataset/sample/0x00ca7509B0340aC22301BDD70aBed2FF42ff1D51.sol", "functions": [], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "", "require": [{"require argument 1": "isOwner", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 0, "line": 43}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 19}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 36}, {"constructor arguments": "string memory name, string memory symbol, uint8 decimals", "require": [], "assert": [], "revert": [], "external calls": 10, "line": 142}, {"constructor arguments": "address _token, address _controller", "require": [], "assert": [], "revert": [], "external calls": 13, "line": 285}], "compiler versions": "^0.5.8;\n"}, {"name": "../dataset/sample/0x0D97baC371C34fBeccBbe64970453346e4e2bab3.sol", "functions": [], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "", "require": [{"require argument 1": "_owner == _msgSender", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 0, "line": 529}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 27, "line": 513}, {"constructor arguments": "string memory name, string memory symbol", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 605}, {"constructor arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 13, "line": 921}], "compiler versions": "^0.5.16;\n"}, {"name": "../dataset/sample/0x000000d4e883e304c7f9574ebeecf238eb55a40f.sol", "functions": [{"function name": "tokenFallback", "function arguments": "address from, uint256 qty, bytes data", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 4}, {"function name": "sub", "function arguments": "uint256 a, uint256 b", "require": [{"require argument 1": "b <= a", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 0, "line": 8}, {"function name": "add", "function arguments": "uint256 a, uint256 b", "require": [{"require argument 1": "c >= a", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 0, "line": 12}, {"function name": "isContract", "function arguments": "address target", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 32}, {"function name": "transfer", "function arguments": "address target, uint256 qty", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 39}, {"function name": "transfer", "function arguments": "address target, uint256 qty, bytes data", "require": [], "assert": [], "revert": [], "external calls": 4, "line": 48}, {"function name": "transferFrom", "function arguments": "address from, address to, uint256 qty", "require": [], "assert": [], "revert": [], "external calls": 4, "line": 57}, {"function name": "approve", "function arguments": "address spender, uint256 qty", "require": [], "assert": [], "revert": [], "external calls": 3, "line": 64}], "modifiers": [], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 29}], "compiler versions": "^0.6.12;\n"}, {"name": "../dataset/sample/0x0C363C7c42Cc80Ac93A664AF5b82C71B0Cd9296d.sol", "functions": [{"function name": "detectTransferRestriction", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 15}, {"function name": "messageForTransferRestriction", "function arguments": "uint8 restrictionCode", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 27}, {"function name": "authorizeTransfer", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 38}, {"function name": "walletActivated", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 45}, {"function name": "isConstructor", "function arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 258}, {"function name": "_initializeOperatorRole", "function arguments": "", "require": [], "assert": [], "revert": [], "external calls": 8, "line": 527}, {"function name": "isOperator", "function arguments": "address account", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 539}, {"function name": "addOperator", "function arguments": "address account", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 543}, {"function name": "removeOperator", "function arguments": "address account", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 547}, {"function name": "renounceOperator", "function arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 551}, {"function name": "_addOperator", "function arguments": "address account", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 555}, {"function name": "_removeOperator", "function arguments": "address account", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 560}, {"function name": "getJurisdictionFlow", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 3, "line": 774}, {"function name": "getAuthorizedUserIdInfo", "function arguments": "address _userId", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 784}, {"function name": "getUserIdLockup", "function arguments": "address _userId, uint _lockupIndex", "require": [], "assert": [], "revert": [], "external calls": 4, "line": 807}, {"function name": "getLockedTokenCount", "function arguments": "address _userId", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 821}, {"function name": "detectTransferRestriction", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 5, "line": 846}, {"function name": "messageForTransferRestriction", "function arguments": "uint8 _restrictionCode", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 874}, {"function name": "initialize", "function arguments": "address _callingContract", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 902}, {"function name": "configWhitelist", "function arguments": "uint _startDate, uint _lockupGranularity", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 911}, {"function name": "updateJurisdictionFlows", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 929}, {"function name": "approveNewUsers", "function arguments": "\n", "require": [{"require argument 1": "jurisdictionId != 0", "require argument 2": " \"INVALID_JURISDICTION_ID\""}], "assert": [], "revert": [], "external calls": 2, "line": 956}, {"function name": "addApprovedUserWallets", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 3, "line": 984}, {"function name": "revokeUserWallets", "function arguments": "address[] calldata _wallets", "require": [], "assert": [], "revert": [], "external calls": 3, "line": 1015}, {"function name": "updateJurisdictionsForUserIds", "function arguments": "\n", "require": [{"require argument 1": "jurisdictionId != 0", "require argument 2": " \"INVALID_JURISDICTION_ID\""}], "assert": [], "revert": [], "external calls": 2, "line": 1044}, {"function name": "_addLockup", "function arguments": "\n", "require": [{"require argument 1": "info.jurisdictionId != 0", "require argument 2": " \"USER_ID_UNKNOWN\""}], "assert": [], "revert": [], "external calls": 5, "line": 1074}, {"function name": "addLockups", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 10, "line": 1118}, {"function name": "_processLockup", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 1139}, {"function name": "processLockups", "function arguments": "address _userId, uint _maxCount", "require": [{"require argument 1": "info.jurisdictionId > 0", "require argument 2": " \"USER_ID_UNKNOWN\""}], "assert": [], "revert": [], "external calls": 8, "line": 1168}, {"function name": "forceUnlockUpTo", "function arguments": "address _userId, uint _maxLockupIndex", "require": [{"require argument 1": "info.jurisdictionId > 0", "require argument 2": " \"USER_ID_UNKNOWN\""}, {"require argument 1": "_maxLockupIndex > info.startIndex", "require argument 2": " \"ALREADY_UNLOCKED\""}], "assert": [], "revert": [], "external calls": 1, "line": 1184}, {"function name": "_isJurisdictionHalted", "function arguments": "uint _jurisdictionId", "require": [], "assert": [], "revert": [], "external calls": 3, "line": 1199}, {"function name": "halt", "function arguments": "uint[] calldata _jurisdictionIds, uint[] calldata _expirationTimestamps", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 1210}, {"function name": "_halt", "function arguments": "uint _jurisdictionId, uint _until", "require": [{"require argument 1": "_until > now", "require argument 2": " \"HALT_DUE_SHOULD_BE_FUTURE\""}], "assert": [], "revert": [], "external calls": 1, "line": 1217}, {"function name": "resume", "function arguments": "uint[] calldata _jurisdictionIds", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 1228}, {"function name": "_resume", "function arguments": "uint _jurisdictionId", "require": [{"require argument 1": "jurisdictionHaltsUntil[_jurisdictionId] != 0", "require argument 2": " \"ATTEMPT_TO_RESUME_NONE_HALTED_JURISDICATION\""}], "assert": [], "revert": [], "external calls": 1, "line": 1235}, {"function name": "setInvestorLimit", "function arguments": "uint _limit", "require": [{"require argument 1": "_limit >= currentInvestors", "require argument 2": " \"LIMIT_SHOULD_BE_LARGER_THAN_CURRENT_INVESTORS\""}], "assert": [], "revert": [], "external calls": 0, "line": 1246}, {"function name": "setInvestorLimitForJurisdiction", "function arguments": "uint[] calldata _jurisdictionIds, uint[] calldata _limits", "require": [{"require argument 1": "limit >= currentInvestorsByJurisdiction[jurisdictionId]", "require argument 2": " \"LIMIT_SHOULD_BE_LARGER_THAN_CURRENT_INVESTORS\""}], "assert": [], "revert": [], "external calls": 0, "line": 1258}, {"function name": "activateWallets", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 1273}, {"function name": "_activateWallet", "function arguments": "\n", "require": [{"require argument 1": "userId != address", "require argument 2": "0"}, {"require argument 1": "!walletActivated[_wallet]", "require argument 2": "\"ALREADY_ACTIVATED_WALLET\""}], "assert": [], "revert": [], "external calls": 1, "line": 1281}, {"function name": "deactivateWallet", "function arguments": "\n", "require": [{"require argument 1": "callingContract.balanceOf", "require argument 2": "_wallet"}], "assert": [], "revert": [], "external calls": 0, "line": 1299}, {"function name": "deactivateWallets", "function arguments": "\n", "require": [{"require argument 1": "callingContract.balanceOf", "require argument 2": "_wallets[i]"}], "assert": [], "revert": [], "external calls": 1, "line": 1306}, {"function name": "_deactivateWallet", "function arguments": "\n", "require": [{"require argument 1": "userId != address", "require argument 2": "0"}, {"require argument 1": "walletActivated[_wallet]", "require argument 2": "\"ALREADY_DEACTIVATED_WALLET\""}], "assert": [], "revert": [], "external calls": 2, "line": 1315}, {"function name": "enlistUsers", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 1329}, {"function name": "_enlistUser", "function arguments": "\n", "require": [{"require argument 1": "!investorEnlisted[_userId]", "require argument 2": "\"ALREADY_ENLISTED_USER\""}, {"require argument 1": "maxInvestors == 0 || totalCount <= maxInvestors", "require argument 2": " \"EXCEEDING_MAX_INVESTORS\""}, {"require argument 1": "maxJurisdictionLimit == 0 || jurisdictionCount <= maxJurisdictionLimit", "require argument 2": "\"EXCEEDING_JURISDICTION_MAX_INVESTORS\""}], "assert": [], "revert": [], "external calls": 1, "line": 1337}, {"function name": "delistUsers", "function arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 1356}, {"function name": "_delistUser", "function arguments": "\n", "require": [{"require argument 1": "investorEnlisted[_userId]", "require argument 2": "\"ALREADY_DELISTED_USER\""}, {"require argument 1": "userActiveWalletCount[_userId]==0", "require argument 2": "\"ATTEMPT_TO_DELIST_USER_WITH_ACTIVE_WALLET\""}], "assert": [], "revert": [], "external calls": 1, "line": 1364}, {"function name": "authorizeTransfer", "function arguments": "\n", "require": [{"require argument 1": "address", "require argument 2": "callingContract"}, {"require argument 1": "toUserId != address", "require argument 2": "0"}, {"require argument 1": "!_isJurisdictionHalted", "require argument 2": "fromJurisdictionId"}, {"require argument 1": "!_isJurisdictionHalted", "require argument 2": "toJurisdictionId"}, {"require argument 1": "lockupLength > 0", "require argument 2": " \"DENIED: JURISDICTION_FLOW\""}, {"require argument 1": "block.timestamp >= startDate", "require argument 2": " \"WAIT_FOR_START_DATE\""}, {"require argument 1": "balance >= _value", "require argument 2": " \"INSUFFICIENT_BALANCE\""}], "assert": [], "revert": [], "external calls": 1, "line": 1382}], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "", "require": [{"require argument 1": "isOwner", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 3, "line": 343}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 292}], "compiler versions": "^0.4.24;\n"}, {"name": "../dataset/sample/0xc0a972a3cf8e52167589694d135abb66409f9b30.sol", "functions": [], "modifiers": [{"modifier name": "initializer", "modifier arguments": "", "require": [{"require argument 1": "_initializing || _isConstructor", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 1, "line": 37}, {"modifier name": "whenNotPaused", "modifier arguments": "", "require": [{"require argument 1": "!_paused", "require argument 2": " \"Pausable: paused\""}], "assert": [], "revert": [], "external calls": 30, "line": 865}, {"modifier name": "whenPaused", "modifier arguments": "", "require": [{"require argument 1": "_paused", "require argument 2": " \"Pausable: not paused\""}], "assert": [], "revert": [], "external calls": 0, "line": 877}, {"modifier name": "onlyAffiliate", "modifier arguments": "", "require": [{"require argument 1": "msg.sender == affiliate", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 28, "line": 1364}], "constructors": [], "compiler versions": "0.5.17;\n"}, {"name": "../dataset/sample/0xe350a2c0A482654cB35b8170588c2E98F921b0f5.sol", "functions": [], "modifiers": [], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [{"revert argument 1": "\"Bad upline\"", "revert argument 2": ";\n"}], "external calls": 2, "line": 42}], "compiler versions": "^0.6.12;\n"}, {"name": "../dataset/sample/0x15DBA2328F325ff53d1976270C516A3DE8629AeF.sol", "functions": [], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "", "require": [{"require argument 1": "isOwner", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 0, "line": 269}, {"modifier name": "onlyGovernanceAddress", "modifier arguments": "", "require": [], "assert": [], "revert": [], "external calls": 18, "line": 537}, {"modifier name": "updateReward", "modifier arguments": "address account", "require": [], "assert": [], "revert": [], "external calls": 9, "line": 635}, {"modifier name": "checkStart", "modifier arguments": "", "require": [{"require argument 1": "initReward > 0", "require argument 2": " \"No reward to stake.\""}, {"require argument 1": "stakeable", "require argument 2": " \"Staking is not started.\""}], "assert": [], "revert": [], "external calls": 0, "line": 645}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 5, "line": 217}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 254}, {"constructor arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 567}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 651}], "compiler versions": "0.6.6;\n"}, {"name": "../dataset/sample/0x0D457d09A70763ce09c0B8c34556D020B93FBAB8.sol", "functions": [], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "", "require": [{"require argument 1": "_owner == _msgSender", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 0, "line": 332}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 48, "line": 322}, {"constructor arguments": "string memory name, string memory symbol", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 363}, {"constructor arguments": "ZUSEToken _ZUSE", "require": [], "assert": [], "revert": [], "external calls": 32, "line": 713}], "compiler versions": "^0.6.12;\n"}, {"name": "../dataset/sample/0x0cf53a09ad1ad03a8562654a79858d6d179e0cb1.sol", "functions": [], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "", "require": [{"require argument 1": "_owner == _msgSender", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 0, "line": 401}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 13, "line": 385}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 444}], "compiler versions": "0.6.12;\n"}, {"name": "../dataset/sample/0x00C3bedB44D4e3521563dE947f6800aa4302C441.sol", "functions": [], "modifiers": [], "constructors": [{"constructor arguments": "string memory name, string memory symbol", "require": [], "assert": [], "revert": [], "external calls": 13, "line": 441}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 13, "line": 728}], "compiler versions": "^0.6.12;\n"}, {"name": "../dataset/sample/0xD210770A531bBd36AFc05f6E59340F13Dd81D72d.sol", "functions": [{"function name": "initialize", "function arguments": "address sender", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 42}, {"function name": "owner", "function arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 47}, {"function name": "isOwner", "function arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 56}, {"function name": "transferOwnership", "function arguments": "address newOwner", "require": [], "assert": [], "revert": [], "external calls": 1, "line": 60}, {"function name": "_transferOwnership", "function arguments": "address newOwner", "require": [{"require argument 1": "_ownershipLocked == 0", "require argument 2": ";\n"}, {"require argument 1": "newOwner != address", "require argument 2": "0"}], "assert": [], "revert": [], "external calls": 0, "line": 64}, {"function name": "lockOwnership", "function arguments": "", "require": [{"require argument 1": "_ownershipLocked == 0", "require argument 2": ";\n"}], "assert": [], "revert": [], "external calls": 0, "line": 72}, {"function name": "totalSupply", "function arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 82}, {"function name": "balanceOf", "function arguments": "address who", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 84}, {"function name": "allowance", "function arguments": "address owner, address spender", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 86}, {"function name": "transfer", "function arguments": "address to, uint256 value", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 89}, {"function name": "approve", "function arguments": "address spender, uint256 value", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 91}, {"function name": "transferFrom", "function arguments": "address from, address to, uint256 value", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 94}], "modifiers": [], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 182}], "compiler versions": ">=0.6.0;\n"}, {"name": "../dataset/sample/0x93ae58cc1d029bBdF8b53a89337F4aBb63F6D588.sol", "functions": [], "modifiers": [{"modifier name": "onlyOwner", "modifier arguments": "", "require": [{"require argument 1": "isOwner", "require argument 2": ""}], "assert": [], "revert": [], "external calls": 1, "line": 119}, {"modifier name": "onlySolo", "modifier arguments": "address from", "require": [], "assert": [], "revert": [], "external calls": 0, "line": 1143}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 3, "line": 104}, {"constructor arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 61, "line": 1133}, {"constructor arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 16, "line": 1417}], "compiler versions": "0.5.0;\n"}, {"name": "../dataset/sample/0x00cd3ae59fdbd375a187bf8074db59edaf766c19.sol", "functions": [], "modifiers": [{"modifier name": "note", "modifier arguments": "\n", "require": [], "assert": [], "revert": [], "external calls": 2, "line": 34}, {"modifier name": "auth", "modifier arguments": " require", "require": [{"require argument 1": "wards[msg.sender] == 1", "require argument 2": "; _; }\n"}], "assert": [], "revert": [], "external calls": 3, "line": 75}], "constructors": [{"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 9, "line": 241}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 16, "line": 384}, {"constructor arguments": "", "require": [], "assert": [], "revert": [], "external calls": 18, "line": 590}], "compiler versions": "0.5.7;\n"}]}
